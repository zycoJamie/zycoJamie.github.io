import{_ as n,o as a,e as l,G as p}from"./chunks/framework.CXoXy2UI.js";const E=JSON.parse('{"title":"element-ui自定义上传图片","description":"","frontmatter":{"title":"element-ui自定义上传图片","class":"js","date":"2019-05-28"},"headers":[],"relativePath":"posts/2019-js-ui自定义上传图片.md","filePath":"posts/2019-js-ui自定义上传图片.md"}'),e={name:"posts/2019-js-ui自定义上传图片.md"};function o(r,s,c,t,y,i){return a(),l("div",null,s[0]||(s[0]=[p(`<blockquote><p>利用el-upload的http-request属性实现自定义上传逻辑，下面的上传是把图片转换成字节数组</p></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">_reqUpload</span><span style="color:#24292E;">(data) {</span></span>
<span class="line"><span style="color:#D73A49;">      let</span><span style="color:#24292E;"> _this </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> this</span></span>
<span class="line"><span style="color:#D73A49;">      let</span><span style="color:#24292E;"> reader </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> FileReader</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      reader.</span><span style="color:#6F42C1;">readAsArrayBuffer</span><span style="color:#24292E;">(data.file)</span></span>
<span class="line"><span style="color:#24292E;">      reader.</span><span style="color:#6F42C1;">onload</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">res</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">        let</span><span style="color:#24292E;"> byte </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Uint8Array</span><span style="color:#24292E;">(res.currentTarget.result)</span></span>
<span class="line"><span style="color:#D73A49;">        let</span><span style="color:#24292E;"> binary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">        for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> byte.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          binary.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(byte[i])</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#6F42C1;">        reqUpload</span><span style="color:#24292E;">({ date: binary, filePath: </span><span style="color:#032F62;">&#39;image&#39;</span><span style="color:#24292E;">, fileName: </span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;&#39;</span><span style="color:#24292E;">, fileType: data.file.type.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] })</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">res</span><span style="color:#D73A49;"> =&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">            if</span><span style="color:#24292E;"> (res.code </span><span style="color:#D73A49;">===</span><span style="color:#005CC5;"> 200</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">              _this.</span><span style="color:#6F42C1;">$message</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                message: </span><span style="color:#032F62;">&#39;上传成功&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                type: </span><span style="color:#032F62;">&#39;success&#39;</span></span>
<span class="line"><span style="color:#24292E;">              })</span></span>
<span class="line"><span style="color:#24292E;">              _this.</span><span style="color:#6F42C1;">handlePicSuccess</span><span style="color:#24292E;">(res.result)</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          })</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            _this.</span><span style="color:#6F42C1;">$message</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">              type: </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              message: </span><span style="color:#032F62;">&#39;上传失败&#39;</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">          })</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,2)]))}const u=n(e,[["render",o]]);export{E as __pageData,u as default};
